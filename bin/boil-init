#!/usr/bin/env node

const { Command } = require('commander');
const { writeFileSync, mkdirSync } = require('fs');
const { join, resolve } = require('path');
const { isFileSync } = require('path-type');
const commandWrapper = require('../src/errors/command-wrapper');
const { defaultConfig, defaultFilename } = require('../src/util/config');
const configDir = require('../src/util/config-dir');

const program = new Command();
program
  .usage('--template-dir <path> [options]')
  .requiredOption('-t, --template-dir <path>', 'template directory path')
  .option('-d, --destination <path>', 'custom destination for the config file')
  .option('-f, --force', 'overwrite existing config')
  .option('-s, --spaces <number>', 'indendation size', 2, (value) =>
    parseInt(value, 10)
  )
  .action((opts) => commandWrapper(run, opts))
  .parse(process.argv);

function run(program) {
  const dir = program.destination ? program.destination : configDir();
  const configPath = join(dir, defaultFilename);

  console.log(`Creating default config file...`);
  if (!program.force && isFileSync(configPath)) {
    console.info(`${configPath} already exists! Use --force to overwrite it.`);
    process.exit(1);
  }

  // Store custom config directory in environment
  if (program.destination) {
    writeFileSync(
      join(process.cwd(), '.env'),
      `CONFIG_DIR=${program.destination}`
    );
  }

  const config = {
    templateDirectory: resolve(dir, program.templateDir),
    ...defaultConfig,
  };
  const content = JSON.stringify(config, null, program.spaces);
  mkdirSync(dir, { recursive: true });
  writeFileSync(configPath, content);
  console.info(`Created config file at ${configPath}\n${content}`);
}
